$( document ).ready(function() {  var bottomEditPanelIsUp = false;  var backgroundShirtIsWhite = true;  var imageCount = 0;  var currentlySelectedObject = "";  var fullWidthTextAreaIsEmpty = true;  var textDivCount = 0;  var currentlySelectedMinWidth = 0;  var currentlySelectedFontSize = 12;  var innerID = "";  var currentFont = "Verdana";  var currentColor = "black";  $('html, body').css({      'overflow': 'hidden',      'height': '100%'  });/*-------------handle layout-------------------*/var width = $(window).width();var rightPanelInsideHeight = $('.right-panel-container').height();$('.left-panel-container').height(rightPanelInsideHeight + 80);// console.log(rightPanelInsideHeight);if (width < 900) {  $('.right-edit-panel, .marginal-panel, .left-edit-panel').hide();  $('.toggle-btns, .center-continue-btn, .edit-buttons-row').show();} else {  $('.right-edit-panel, .marginal-panel, .left-edit-panel').show();  $('.toggle-btns, .center-continue-btn, .edit-buttons-row, .bottom-edit-panel, .toggle-shirt-color-btn, .trash-can').hide();  bottomEditPanelIsUp = false;}$(window).on('resize', function(event){    // Do stuff here    var width = $(window).width();    if (width < 900) {      $('.right-edit-panel, .marginal-panel, .left-edit-panel').hide();      $('.toggle-btns, .center-continue-btn, .edit-buttons-row, .toggle-shirt-color-btn, .trash-can').show();    } else {      $('.right-edit-panel, .marginal-panel, .left-edit-panel').show();      $('.toggle-btns, .center-continue-btn, .edit-buttons-row, .bottom-edit-panel, .toggle-shirt-color-btn, .trash-can').hide();      bottomEditPanelIsUp = false;      $(".right-edit-panel").css({ position: "absolute",                marginLeft: 20, marginTop: 10,                top: 60, right: 40 });    }});$('.toggle-shirt-color-btn').on('click', function() {  if (backgroundShirtIsWhite) {    $('.shirt-panel').css("background-image", "url(images/blackShirt.jpg)");    $('.toggle-shirt-color-btn').css("background-image", "url(images/blankShirt.png)");    backgroundShirtIsWhite = false;  } else {    $('.shirt-panel').css("background-image", "url(images/blankShirt.png)");    $('.toggle-shirt-color-btn').css("background-image", "url(images/blackShirt.jpg)");    backgroundShirtIsWhite = true;  }});$('.left-edit-button').on('click', function() {  bottomEditPanelIsUp = true;  $('#bottomEditPanel').animate({bottom: "0px", visibility:"visible"}, 450);});$('#editPanelDoneButton').on('click', function() {  $('#bottomEditPanel').animate({bottom: "-1000px"}, 450);  bottomEditPanelIsUp = false;});$('.shirt-panel').on({ 'touchstart' : function(e){    if (bottomEditPanelIsUp == true) {      var container = $("#bottomEditPanel");      if (!container.is(e.target) // if the target of the click isn't the container...          && container.has(e.target).length === 0) // ... nor a descendant of the container      {          $('#bottomEditPanel').animate({bottom: "-1000px"}, 450); <!-- to make the #content div slide out on click -->      }      bottomEditPanelIsUp = false;      console.log(bottomEditPanelIsUp);    } else {      //    }  }});/*-------------end handle layout-------------------*///remove this?//alt approach$("#getval").change(function() {    // will log a FileList object, view gifs below    console.log(this.files);});////enter text in textarea, add it to new text div$('#fullWidthTextArea').focus(function () {  var string = "newTextDiv";  var textDivCountAsString = textDivCount.toString();  var newTextDivIDString = string.concat(textDivCountAsString);  var addedHashToAboveString = "#".concat(newTextDivIDString);  innerID = newTextDivIDString.concat("InnerDiv");  if (currentlySelectedObject == "" || currentlySelectedObject == "imageInBox" || currentlySelectedObject == "newImageHolder0") {    if (currentlySelectedObject == "imageInBox") {      $("#" + currentlySelectedObject).siblings().hide();    } else if (currentlySelectedObject == "newImageHolder0") {    }    deselectEverything();    // currentlySelectedObject = "";    var divForText = $("<div id='" + newTextDivIDString + "' class='div-for-new-text elementResizable' style='display: table;'></div>");    $('.platen').append(divForText);    textDivCount++;    $(divForText).draggable();    $(divForText).css({      'font-family' : currentFont,      'color' : currentColor    });    console.log($(divForText).position());    // $(divForText).addClass('marching-ants marching');    $(divForText).resizable({      marginLeft:'auto',      marginRight:'auto',      // position:absolute,      aspectRatio:true,      minWidth:currentlySelectedMinWidth,      resize: function(event, ui) {        currentlySelectedFontSize++;        $(this).css({            // 'top': ((ui.originalSize.height - ui.size.height))/8,            // 'left': ((ui.originalSize.width - ui.size.width))/8            // 'top': parseInt(ui.position.top, 0) + ((ui.originalSize.height - ui.size.height)) / 2,            // 'left': parseInt(ui.position.left, 0) + ((ui.originalSize.width - ui.size.width)) / 2            // 'top': 50,            // 'left':100        });        makeCurrentlySelectedObject(this);        // console.log(ui.size.width);        // console.log(ui.originalSize.width);        var newFontSize = (ui.size.width * ui.size.height)/500;        if (newFontSize >= 14) {          $(this).css("font-size", newFontSize + "px");        } else if (newFontSize < 14) {          $(this).css("font-size", "14px");        }    }    });    makeCurrentlySelectedObject(addedHashToAboveString);    $(addedHashToAboveString).append("<div class='delete-element-button' style='margin-top:-10px'></div>");  }});function getWidthOfCurrentlySelectedObject(d) {  currentlySelectedMinWidth = $(d).width();}$('#fullWidthTextArea').keypress(function(e) {  $("#" + currentlySelectedObject).append(String.fromCharCode(e.which));  getWidthOfCurrentlySelectedObject("#" + currentlySelectedObject);});//handle spacebar$('#fullWidthTextArea').keydown(function(e) {  var key = event.keyCode || event.charCode;   if( key == 32 ) {     $("#" + currentlySelectedObject).append("\xa0");   } else if(key == 13) { //Enter keycode    //  $("#" + currentlySelectedObject).append("<p>asdf</p>");     console.log('enter'); }});//handle backspaces in textarea$('#fullWidthTextArea').on('keyup', function() {   var key = event.keyCode || event.charCode;   if( key == 8 ) {     console.log('backspace');       var txt = $(this).val();      $("#" + currentlySelectedObject).empty();      $("#" + currentlySelectedObject).append(txt);      $("#" + currentlySelectedObject).append("<div class='delete-element-button' style='margin-top:-10px'></div>");      $("#" + currentlySelectedObject).resizable();        $("#" + currentlySelectedObject).children().show();       getWidthOfCurrentlySelectedObject("#" + currentlySelectedObject);   }});//change font for selected object$("#fonts").change(function() {    //alert($(this).val());    $("#" + currentlySelectedObject).css("font-family", $(this).val());});//clear textarea$('.add-text-btn').click(function(){  $('#fullWidthTextArea').val('');  fullWidthTextAreaIsEmpty = true;})$('#imageInBox').on('resize', function(e){  $('.image-holder').children().show();  console.log('show for me');});$('#radio-selector input').on('change', function() {  if ($('input[name=color]:checked', '#radio-selector').val() == 'Black'){    $('.shirt-panel').css("background-image", "url(images/blackShirt.jpg)");  } else if ($('input[name=color]:checked', '#radio-selector').val() == 'White') {    $('.shirt-panel').css("background-image", "url(images/blankShirt.png)");  }});// render the image in our view, make new imagefunction renderImage(file) {  // generate a new FileReader object  var reader = new FileReader();  var string1 = "newImageHolder";  var imageCountToString = imageCount.toString();  var newImageHolderID = string1.concat(imageCountToString);  // inject an image with the src url  reader.onload = function(event) {    the_url = event.target.result    $('.platen').append("<div style='background-color:clear' id='" + newImageHolderID + "' class='elementResizable image-holder')><img id='imageInBox' class='image-in-image-holder' src='" + the_url + "' /></div>");    makeCurrentlySelectedObject("#imageInBox");    imageCount++;    var imageHolderHeight = $("#" + newImageHolderID).height();    var imageHolderWidth = $("#" + newImageHolderID).width();    var imageHolderAspectRatio = imageHolderWidth/imageHolderHeight;    console.log(imageHolderAspectRatio);    $("#" + newImageHolderID).css({        'width': '100%'    });    $("#" + newImageHolderID).draggable();    $("#" + newImageHolderID).resizable({      aspectRatio:true    });    $("#" + newImageHolderID).append("<div class='delete-element-button' style='margin-top:-10px'></div>");  }  // when the file is read it triggers the onload event above.  reader.readAsDataURL(file);}function makeCurrentlySelectedObject(d){  // if (currentlySelectedObject == "#imageInBox") {  //   $("#imageInBox").siblings().show();  //     $("#imageInBox").parent().css('outline', "dashed 2px green");  //       // console.log("eee current object is: " + currentlySelectedObject);  // }  if ($("#" + currentlySelectedObject).hasClass('image-in-image-holder')) {        $("#" + currentlySelectedObject).siblings().hide();  }  var idFromElement = $(d).attr('id');  currentlySelectedObject = idFromElement;  $(d).css('outline', "dashed 2px green");  // console.log("current object is: " + currentlySelectedObject);  $(d).children().show();}function deselectEverything(){  $('*').css('outline', "none");  $('#fullWidthTextArea').val('');  if ($("#" + currentlySelectedObject).hasClass('div-for-new-text')){    $("#" + currentlySelectedObject).children().hide();    currentlySelectedObject = "";  } else if ($("#" + currentlySelectedObject).hasClass('image-in-image-holder')) {        $("#" + currentlySelectedObject).siblings().hide();        currentlySelectedObject = "";  }}//detect element being dragged, is dragging$(document).mousedown(function(e) {    var d = e.target;  if (($(d).hasClass('.delete-element-button'))){      // $(d).parent().remove();      console.log('um');    } else if ($(d).hasClass('image-in-image-holder')){    // $("#" + currentlySelectedObject).children().hide();    // currentlySelectedObject = "";    // // console.log(currentlySelectedObject);    console.log('or here');    // $("*").css("outline","none");    deselectEverything();    console.log($(d).attr('id'));    makeCurrentlySelectedObject(d);    $(d).siblings().show();  } else {    if ($(d).hasClass('div-for-new-text') || $(d).attr('image-in-image-holder') ) {          deselectEverything();          console.log($(d).attr('id'));          makeCurrentlySelectedObject(d);          if ($(d).hasClass('div-for-new-text')){              $('#fullWidthTextArea').val($(d).text());          } else {            $(d).siblings().show();          }    }  var isDragging = false;  $(d)  .mousedown(function() {    console.log('mousedown');      isDragging = false;  })  .mousemove(function() {      isDragging = true;      console.log('drag');   })  .mouseup(function() {      var wasDragging = isDragging;      isDragging = false;      // console.log('mouseup');      if (!wasDragging) {      }  });    }//});$(document).click(function(e) {    var d = e.target;    if (!($(d).hasClass('will-not-deselect-object'))) {      deselectEverything();    }    //deselect any    // $('*').css('outline', "none");    if ($(d).hasClass('div-for-new-text') || $(d).hasClass('image-in-image-holder') ) {          makeCurrentlySelectedObject(d);          if ($(d).hasClass('div-for-new-text')){              $('#fullWidthTextArea').val($(d).text());          } else {              $(d).siblings().show();          }    } else if ($(d).is('#fullWidthTextArea')) {              // console.log('df');    } else if ($(d).is('.delete-element-button')) {      $(d).parent().remove();      $("#fullWidthTextArea").val('');      currentlySelectedObject = "";    } else if ($(d).is('.dropdown')) {    } else {      // console.log('GJJDKJF');    }});// handle input changes$("#getval").change(function() {    console.log(this.files)    // grab the first image in the FileList object and pass it to the function    renderImage(this.files[0])});// handle input changes$("#getval2").change(function() {    console.log(this.files)    // grab the first image in the FileList object and pass it to the function    renderImage(this.files[0])});$(".dropdown-menu li a").click(function(){  $(this).parents(".dropdown").find('.btn').html($(this).text() + ' <span class="caret"></span>');  $(this).parents(".dropdown").find('.btn').val($(this).data('value'));  var fontName = $(this).text();  var colorValue = $(this).attr('id');  console.log(colorValue);  if (colorValue === undefined || colorValue === null) {    $("#" + currentlySelectedObject).css("font-family", fontName);    $(this).parents(".dropdown").find('.btn').css("font-family", fontName);    currentFont = fontName;    console.log(fontName);  } else {    $("#" + currentlySelectedObject).css("color", colorValue);    currentColor = colorValue;    $(this).parents(".dropdown").find('.btn').html( "<div class='color-swatch' style='background-color:" + colorValue + "'></div>" );  }});//print both of these off and examine them:/*----http://stackoverflow.com/questions/15661339/how-do-i-fix-blurry-text-in-my-html5-canvas------*///use this plus the following in some combination/*---http://jsfiddle.net/softvar/5hnyf/---*/var PIXEL_RATIO = (function () {    var ctx = document.createElement("canvas").getContext("2d"),        dpr = window.devicePixelRatio || 1,        bsr = ctx.webkitBackingStorePixelRatio ||              ctx.mozBackingStorePixelRatio ||              ctx.msBackingStorePixelRatio ||              ctx.oBackingStorePixelRatio ||              ctx.backingStorePixelRatio || 1;    return dpr / bsr;})();createHiDPICanvas = function(w, h, ratio) {    if (!ratio) { ratio = PIXEL_RATIO; }    var newCanvas = document.createElement("canvas");    newCanvas.setAttribute("id", "canvasForExport");    newCanvas.width = w * ratio;    newCanvas.height = h * ratio;    newCanvas.style.width = w + "px";    newCanvas.style.height = h + "px";    newCanvas.style.background = 'blue';    newCanvas.getContext("2d").setTransform(ratio, 0, 0, ratio, 0, 0);    $(newCanvas).append('.platen');    console.log('is anybody listening to me?');    return newCanvas}$('.right-panel-continue-btn').click(function(){  //Create canvas with a custom resolution.  var myCustomCanvas = createHiDPICanvas(200, 200);  // $(myCustomCanvas).append('.platen');  // $(myCustomCanvas).style.background = 'blue';  //  var canvas = document.getElementById('canvasForExport');   var ctx = myCustomCanvas.getContext('2d');   ctx.fillStyle = "blue";   ctx.fillRect(10, 10, 100, 100);  // $(myCanvas).append('.shirt-panel');});});